# Generated by ariadne-codegen
# Source: gql/queries.graphql

from typing import Annotated, Any, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class A2AStream(BaseModel):
    a_2_a_stream: Optional[
        Annotated[
            Union[
                "A2AStreamA2AStreamJSONRPCErrorResponse",
                "A2AStreamA2AStreamJSONRPCSuccessResponse",
            ],
            Field(discriminator="typename__"),
        ]
    ] = Field(alias="a2aStream")


class A2AStreamA2AStreamJSONRPCErrorResponse(BaseModel):
    typename__: Literal["JSONRPCErrorResponse"] = Field(alias="__typename")
    error_id: Optional[Any] = Field(alias="errorId")
    error: "A2AStreamA2AStreamJSONRPCErrorResponseError"


class A2AStreamA2AStreamJSONRPCErrorResponseError(BaseModel):
    code: int
    message: str
    data: Optional[Any]


class A2AStreamA2AStreamJSONRPCSuccessResponse(BaseModel):
    typename__: Literal["JSONRPCSuccessResponse"] = Field(alias="__typename")
    id: Any
    result: Any


A2AStream.model_rebuild()
A2AStreamA2AStreamJSONRPCErrorResponse.model_rebuild()
