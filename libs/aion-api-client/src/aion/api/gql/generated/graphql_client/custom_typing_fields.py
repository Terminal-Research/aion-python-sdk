# Generated by ariadne-codegen

from .base_operation import GraphQLField


class ChatCompletionStreamChunkUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ChatCompletionStreamChunkUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ChatCompletionStreamChunkUnion":
        self._alias = alias
        return self


class JSONRPCResponseUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "JSONRPCResponseUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "JSONRPCResponseUnion":
        self._alias = alias
        return self


class WalletStreamEventUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "WalletStreamEventUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "WalletStreamEventUnion":
        self._alias = alias
        return self


class AgentBehaviorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AgentBehaviorGraphQLField":
        self._alias = alias
        return self


class AgentEnvironmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AgentEnvironmentGraphQLField":
        self._alias = alias
        return self


class AgentIdentityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AgentIdentityGraphQLField":
        self._alias = alias
        return self


class AssetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetGraphQLField":
        self._alias = alias
        return self


class AssetBalanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetBalanceGraphQLField":
        self._alias = alias
        return self


class AssetPriceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetPriceGraphQLField":
        self._alias = alias
        return self


class BalanceChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BalanceChangeGraphQLField":
        self._alias = alias
        return self


class BranchOptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchOptionGraphQLField":
        self._alias = alias
        return self


class ChatCompletionStreamChoiceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionStreamChoiceGraphQLField":
        self._alias = alias
        return self


class ChatCompletionStreamErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionStreamErrorGraphQLField":
        self._alias = alias
        return self


class ChatCompletionStreamResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionStreamResponseGraphQLField":
        self._alias = alias
        return self


class ChatCompletionStreamResponseChunkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionStreamResponseChunkGraphQLField":
        self._alias = alias
        return self


class ClientSecretGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClientSecretGraphQLField":
        self._alias = alias
        return self


class ClientSecretHashGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClientSecretHashGraphQLField":
        self._alias = alias
        return self


class CreateLocalDeploymentResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateLocalDeploymentResponseGraphQLField":
        self._alias = alias
        return self


class DeltaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeltaGraphQLField":
        self._alias = alias
        return self


class DeploymentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentGraphQLField":
        self._alias = alias
        return self


class DeploymentDetailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentDetailGraphQLField":
        self._alias = alias
        return self


class DeploymentEnvironmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentEnvironmentGraphQLField":
        self._alias = alias
        return self


class GitHubInstallationOptionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GitHubInstallationOptionsGraphQLField":
        self._alias = alias
        return self


class InstallationOptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InstallationOptionGraphQLField":
        self._alias = alias
        return self


class JSONRPCErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JSONRPCErrorGraphQLField":
        self._alias = alias
        return self


class JSONRPCErrorResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JSONRPCErrorResponseGraphQLField":
        self._alias = alias
        return self


class JSONRPCSuccessResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JSONRPCSuccessResponseGraphQLField":
        self._alias = alias
        return self


class KVStringStringGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KVStringStringGraphQLField":
        self._alias = alias
        return self


class MemorySpaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MemorySpaceGraphQLField":
        self._alias = alias
        return self


class MutationsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MutationsGraphQLField":
        self._alias = alias
        return self


class PriceChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PriceChangeGraphQLField":
        self._alias = alias
        return self


class QueriesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueriesGraphQLField":
        self._alias = alias
        return self


class RepositoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryGraphQLField":
        self._alias = alias
        return self


class RepositoryOptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryOptionGraphQLField":
        self._alias = alias
        return self


class SubscriptionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubscriptionsGraphQLField":
        self._alias = alias
        return self


class TokenIconUrlsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TokenIconUrlsGraphQLField":
        self._alias = alias
        return self


class TransactionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TransactionGraphQLField":
        self._alias = alias
        return self


class TransactionEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TransactionEventGraphQLField":
        self._alias = alias
        return self


class UserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGraphQLField":
        self._alias = alias
        return self


class UserNetworkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserNetworkGraphQLField":
        self._alias = alias
        return self


class VersionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VersionGraphQLField":
        self._alias = alias
        return self


class WalletStateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WalletStateGraphQLField":
        self._alias = alias
        return self


class WalletStateEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WalletStateEventGraphQLField":
        self._alias = alias
        return self


class WalletStateWithPricesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WalletStateWithPricesGraphQLField":
        self._alias = alias
        return self
