# Generated by ariadne-codegen
# Source: gql/schema.graphql

from enum import Enum


class AgentBehaviorDeploymentType(str, Enum):
    Aion = "Aion"
    LangGraph = "LangGraph"


class AgentIdentityType(str, Enum):
    Deployed = "Deployed"
    Personal = "Personal"


class AssetKind(str, Enum):
    Native = "Native"
    Token = "Token"


class DeploymentType(str, Enum):
    GitHub = "GitHub"
    Local = "Local"


class GitHubAccountType(str, Enum):
    Organization = "Organization"
    User = "User"


class Network(str, Enum):
    ARBITRUM = "ARBITRUM"
    BASE = "BASE"
    BNB_CHAIN = "BNB_CHAIN"
    ETHEREUM = "ETHEREUM"
    OPTIMISM = "OPTIMISM"
    OTHER = "OTHER"
    POLYGON = "POLYGON"


class Privacy(str, Enum):
    Private = "Private"
    Public = "Public"


class SubjectType(str, Enum):
    User = "User"
    Version = "Version"


class TransactionDirection(str, Enum):
    RECEIVED = "RECEIVED"
    SENT = "SENT"


class TransactionStatus(str, Enum):
    CONFIRMED = "CONFIRMED"
    PENDING = "PENDING"


class UserNetworkType(str, Enum):
    Aion = "Aion"
    Telegram = "Telegram"


class VersionStatus(str, Enum):
    Building = "Building"
    Cancelled = "Cancelled"
    Error = "Error"
    Offline = "Offline"
    Online = "Online"
    Provisioning = "Provisioning"
    Queued = "Queued"
